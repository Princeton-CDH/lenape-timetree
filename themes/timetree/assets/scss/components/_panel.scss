body.home main > aside {
  // on mobile, panel is positioned absolutely at bottom of screen
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 44vh;

  // aside container is a flexible column
  display: flex;
  flex-direction: column;
  justify-content: flex-end; // on mobile, stick to bottom

  color: $nearwhite;

  @include for-desktop-up {
    position: relative;
    margin-top: 120px; // todo: adjust for current tag container

    justify-content: flex-start; // on desktop, stick to top

    height: auto; // set based on content height
    max-height: calc(100% - 120px - 38px - 27px);
    overflow-y: scroll;
  }

  // allow closing the intro on mobile
  &.closed {
    visibility: hidden;
  }
  &.show-panel {
    visibility: visible;
  }

  @include for-desktop-up {
    .close {
      // on desktop, close button is not shown by default
      visibility: hidden;
    }
    // hide the close button unless panel has content
    &.show-details .close {
      visibility: visible;
    }
    &.closed {
      visibility: visible;
    }
  }

  // close button
  > .close {
    position: absolute;
    right: 0;
    top: 0;
    padding: 16px 16px 0 0;
    width: 100%;
    text-align: right;
    cursor: pointer;

    z-index: 3;
    text-decoration: none;
    // background-color: $nav-bg-color;

    @include for-desktop-up {
      padding-top: 20px;
      width: auto;
    }

    .ph-x {
      width: 20px;
      height: 20px;
    }
  }

  // panel for leaf details is hidden by default;
  // intro content is hidden when leaf details are displayed
  #leaf-details,
  &.show-details #intro {
    height: 0;
    min-height: 0;
    overflow: hidden;
    padding: 0;
  }

  &.show-details #leaf-details,
  &.show-details article {
    height: 100%;
    max-height: 100%;

    @include for-desktop-up {
      height: auto;
    }
  }

  // shadow applied to intro and to leaf-details container (desktop only)
  @include for-desktop-up {
    #intro,
    #leaf-details {
      $shadow: rgba(0, 0, 0, 0.4);
      box-shadow: 0px 2px 4px $shadow, 0px 4px 5px $shadow, 0px 1px 10px $shadow;
      margin: 4px;
    }
  }

  article {
    margin: 0;
    height: 100%;
    width: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    scroll-bar: thin;
    background-color: $nav-bg-color;
    color: $nearwhite;
    padding: 52px 16px 16px;

    @include for-desktop-up {
      max-height: 575px;
    }

    // styles for content within panel
    header {
      h1 {
        margin-bottom: 2px;
      }
      aside,
      time {
        // branch name, display date
        font-weight: 700;
        font-size: 18px;
        @include for-desktop-up {
          font-size: 20px;
        }
      }

      margin-bottom: 16px;

      // figure attribution (provisional styles)
      .attribution {
        display: block;
        font-size: 85%;
      }

      // branch name has leaf icon
      aside {
        span {
          vertical-align: top;
          line-height: 31px;
          @include for-desktop-up {
            line-height: 45px;
          }
        }

        // use pseudo-element to add leaf icon as a mask
        &::before {
          -webkit-mask-image: url(/img/icons/leaf.svg);
          mask-image: url(/img/icons/leaf.svg);
          -webkit-mask-size: contain;
          mask-size: contain;
          -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
          background-color: currentColor;
          display: inline-block;
          content: " ";
          width: 14px;
          margin-right: 8px;
          height: 31px;

          @include for-desktop-up {
            width: 20px;
            height: 45px;
          }
        }

        // color leaf based on branch
        // TODO: consider making a branch to leaf color mapping in one place...
        &.lands-waters::before {
          color: map-get($leaf-color, "c");
        }
        &.communities::before {
          color: map-get($leaf-color, "b");
        }
        &.university::before {
          color: map-get($leaf-color, "e");
        }
        &.removals::before {
          color: map-get($leaf-color, "a");
        }
        &.resistance-resurgence::before {
          color: map-get($leaf-color, "d");
        }
      }
    }
  }
}
