$tag-color: (
  "default": #e1d0ca,
  "hover": #fcede8,
  "active": #ffdacc,
);

// $mobile_timetree_height: 65vh;
// on mobile, the svg is 800x800 so needed height should be 100vw
$mobile_timetree_height: calc(100vw + 20px);

.tags {
  /* use flex to avoid unwanted space between tags caused by
    whitespace between tags in the markup */
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  margin-top: 20px;
}

.tags a {
  display: inline-block;
  text-decoration: none;
  margin: 0 12px 12px 0;
  padding: 9px 12px;
  background-color: map-get($tag-color, "default");
  color: $nearblack;
  border-radius: 4px;

  font-size: 16px;
  line-height: 22px;
  @include for-desktop-up {
    font-size: 18px;
  }

  // text should always be black (override regular links)
  &:link,
  &:hover,
  &:visited {
    color: $nearblack;
  }

  &:hover {
    background-color: map-get($tag-color, "hover");
  }

  &:focus-visible {
    // use outline instead of border so size is not affected
    outline: 3px solid black;
  }

  &:active,
  &.select {
    // user-selected, currently active tag
    background-color: map-get($tag-color, "active");
  }
}

// button displayed for current tag, when a tag is active
#current-tag {
  color: $nearblack;
  display: block;
  width: 100%;
  background-color: map-get($tag-color, "active");
  text-align: center;

  opacity: 0; // hidden by default; visible only when a tag is active

  @include for-desktop-up {
    border-radius: 4px;
    width: auto;
    text-align: left;
  }

  span {
    line-height: 40px;
    padding: 0 12px;
  }

  .close {
    float: right;
    display: inline-block;
    cursor: pointer;
    padding: 12px;
    border-left: 2px solid $body-bg-color;
    outline: none;

    i {
      width: 20px;
      height: 20px;
    }
  }

  // when the close button is focused, outline the whole container,
  // not just the x
  &:focus-within {
    outline: 3px solid $focus-color;
  }
}

// tag index page
body.taxonomy {
  h1 {
    padding: 2rem 0 1rem 0;

    @include for-desktop-up {
      padding: 2.5rem 0 1rem 0;
    }
  }
}

.tag-index {
  margin: 0 18px 22px;

  @include for-desktop-up {
    margin: 0 60px 38px;
    // display in two columns on desktop only
    columns: 2 auto; // second arg is width
    column-gap: 8px;
    // don't let the columns get too far apart;
    // set max width based on expected size at xl breakpoint
    max-width: calc(#{$breakpoint-xl} - 120px);
  }

  p {
    // span columns; limit width on desktop for readability.
    column-span: all;

    @include for-desktop-up {
      max-width: 42.2rem;
    }
  }

  .tags {
    margin-top: 0;

    a {
      margin: 8px 0 8px;
    }

    ul {
      list-style-type: none;
      margin-left: 0;
    }
  }

  .count {
    font-size: 14px;
    padding-left: 12px;

    @include for-desktop-up {
      font-size: 16px;
    }
  }
}

.tag-active {
  // when a tag is active, display the current tag button
  // show even if the panel is closed on mobile
  #current-tag,
  aside.closed #current-tag {
    opacity: 100%;
  }

  @include for-mobile {
    // on mobile only, when a tag is active without a leaf, position the tag
    // directly over the footer
    aside.closed {
      bottom: auto;
      // TODO: set variable for tree height on mobile
      top: calc(
        #{$mobile_timetree_height} + #{$mobile_header_height} - #{$tag-height}
      );
    }
  }
}
